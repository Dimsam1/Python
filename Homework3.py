# -*- coding: utf-8 -*-
"""
Created on Wed Apr 27 08:47:47 2022

@author: dimsa
"""
# Задание 6 из Урока 2

############################################################################################################
# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. 
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — 
# номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения). 
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}), 
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, 
# например название, а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }
############################################################################################################

name1 = [x for x in input('Введите название первого товара, его цену, количество\n, ед.изм. (через пробел):').split()]
name2 = [x for x in input('Введите название второго товара, его цену, количество\n, ед.изм. (через пробел):').split()]
name3 = [x for x in input('Введите название третьего товара, его цену, количество\n, ед.изм. (через пробел):').split()]
#nameall = []
#nameall.append(name1)
#nameall.append(name2)
#nameall.append(name3)
#print(nameall)
keys = ['Название', 'Цена', 'Количество', 'Ед.изм']
#print(keys[3])
#for i in range(3):
#    dct = dict(zip(keys, nameall[i]))
#    dct.append(dct)
#print(dct)
#    
#print(dct)
dct1 = dict(zip(keys, name1))
dct2 = dict(zip(keys, name2))
dct3 = dict(zip(keys, name3))
Full_List = ([dct1, dct2, dct3])
#My_List = dct1 | dct2 | dct3
#print(My_List, type(My_List))
print(Full_List)
List_Name = []
List_Price = []

for i in range(len(keys)):
    print (keys[i], (dct1[keys[i]], dct2[keys[i]], dct3[keys[i]]))

for ind, el in enumerate(Full_List):
    print(ind+1, el)


#1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. 
#Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def No_zero_func():
    a = int(input('Введите a: '))
    b = int(input('Введите b: '))
    while b == 0 :
            print('На 0 делить нельзя')
            b = int(input('Заново введите b (не 0!):'))
    else:
        
            print(a / b)
        
    No_zero_func()    
    
#2. Реализовать функцию, принимающую несколько параметров, описывающих данные
#пользователя: имя, фамилия, год рождения, город проживания, email, телефон. 
#Функция должна принимать параметры как именованные аргументы. 
#Реализовать вывод данных о пользователе одной строкой.

def Personal_Card(name, secname, year, city, email, phone):
    Personal_Info = [name, secname, year, city, email, phone]
    for x in range(len(Personal_Info)):
        print(Personal_Info[x], end=' ; ')
    
name = input("Имя: ")
secname = input("Фамилия: ")
year = input("Год рождения: ")
city = input("Город: ")
email = input("email: ")
phone = input("Телефон: ")

Personal_Card(name, secname, year, city, email, phone)

#3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
#и возвращает сумму наибольших двух аргументов.

def My_func(a, b, c):
    List_abc = [a, b, c]
    List_abc = sorted(List_abc, reverse=True)
    return (List_abc[0] + List_abc[1])
    
a, b, c = [float(x) for x in input('Введите три цифры: ').split()]

print(My_func(a, b, c))

#4. Программа принимает действительное положительное число x и целое отрицательное число y. 
#Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). 
#При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
#Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. 
#Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def Func2(x, y):
    print(x ** y)
    
x = int(input('Введите положительное число: '))
y = int(input('Введите отрицательное число: '))

Func2(x, y)
    

def Func3(x, y):
    for _ in range(abs(y+2)):
        x *= x
    return(1 / x)
x = int(input('Введите положительное число: '))
y = int(input('Введите отрицательное число: '))

Func3(x, y)


# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. 
#При нажатии Enter должна выводиться сумма чисел. 
#Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. 
#Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. 
#Но если вместо числа вводится специальный символ, выполнение программы завершается. 
#Если специальный символ введен после нескольких чисел, 
#то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def integers(l1):
    return [int(_) for _ in l1 if type(_) == 'int' or 'float']#token.isdigit()]
def spec_symb(l1, spec_symb = '@'):
    return spec_symb in (_ for _ in l1)

Total_sum = 0
l1 = [x for x in input('Введите любое количество чисел через пробел):').split()]
if l1.index(spec_symb) - True # Или как сравнить на предмет нахождения через bool?
    Total_sum += sum(integers(l1))
    print(Total_sum)
    l1 = [x for x in input('Пhодолжаем вводить любое количество чисел через пробел):').split()]
else:
    print(Total_sum)
    
    
#6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, 
#но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
#Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. 
#Каждое слово состоит из латинских букв в нижнем регистре. 
#Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. 
#Необходимо использовать написанную ранее функцию int_func().

def int_func(Text1):
    return Text1.title()
    
    Text1 = input('Введите любой текст прописными буквами: ')
    print(int_func(Text1))
    